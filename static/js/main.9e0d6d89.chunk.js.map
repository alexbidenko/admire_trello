{"version":3,"sources":["components/Column/Column.module.css","components/Header/Header.module.css","components/Body/Body.module.css","components/Card/Card.module.scss","api/board.js","hooks/useAutoFocus.js","components/common/BaseTextToggle.js","components/Header/TextToggle.js","components/Header/index.jsx","components/Modal/index.tsx","components/Card/index.jsx","components/Column/TextToggle.js","components/Column/index.jsx","components/Body/index.jsx","store/board.js","store/index.js","components/Settings/index.jsx","App.js","reportWebVitals.js","serviceWorker.ts","index.js"],"names":["module","exports","initialData","id","title","cards","content","saveBoard","data","localStorage","setItem","JSON","stringify","useAutoFocus","isRedact","ref","useRef","useEffect","current","focus","BaseTextToggle","inputRef","onChange","onRedactToggle","inputClassName","textClassName","value","onBlur","className","onClick","BaseToggle","props","style","header__redactTitle","header__title","Header","useState","setIsRedact","setTitle","location","useLocation","getItem","parse","header","v","target","pathname","to","header__link","RedactCard","lazy","ModalOverlay","styled","div","ModalCard","Modal","isOpen","onClose","modals","useMemo","document","getElementById","createPortal","CSSTransition","in","timeout","classNames","unmountOnExit","fallback","Card","onUpdate","columnId","cardId","index","description","setIsOpen","deleteCard","type","payload","column_id","card_id","draggableId","provided","card","innerRef","draggableProps","dragHandleProps","card__content","card__deleteButton","memo","column__redactTitle","column__cardTitle","Column","dispatch","useDispatch","addCard","e","preventDefault","column","column__card","column__cardHeader","droppableId","innerProvided","column__cardBody","droppableProps","map","el","placeholder","column__addButton","column__deleteButton","delete_column_id","Body","useSelector","store","board","onDragEnd","useCallback","source","destination","replace","source_index","destination_index","source_column_id","destination_column_id","ignoreElements","body__content","body","direction","body__addColumn","length","initialState","prev","newData","columnIndex","findIndex","c","find","Date","getTime","filter","f","splice","removedColumn","result","removed","sourceCloneIndex","destinationCloneIndex","sourceClone","destinationClone","sourceRemoved","combineReducers","createStore","Settings","clear","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onSuccess","catch","error","ReactDOM","render","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e0d6d89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"Column_column__3F9Jk\",\"column__card\":\"Column_column__card__jcpPg\",\"column__cardHeader\":\"Column_column__cardHeader__1DviZ\",\"column__cardTitle\":\"Column_column__cardTitle__2YDWq\",\"column__redactTitle\":\"Column_column__redactTitle__d2SCv\",\"column__cardBody\":\"Column_column__cardBody__1ZM6R\",\"column__addButton\":\"Column_column__addButton__3UVlm\",\"column__deleteButton\":\"Column_column__deleteButton__pqYP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"header__title\":\"Header_header__title__3Zjy_\",\"header__redactTitle\":\"Header_header__redactTitle__-5Cjb\",\"header__link\":\"Header_header__link__3kRkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__3gqj9\",\"body__content\":\"Body_body__content__19hj8\",\"body__addColumn\":\"Body_body__addColumn__25Ft-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\",\"card__content\":\"Card_card__content__gcz6d\",\"card__deleteButton\":\"Card_card__deleteButton__1mNcH\"};","const initialData = [\n    {\n        id: 1,\n        title: 'Название колонки 1',\n        cards: [\n            {\n                id: 1,\n                content: 'Содержимое заметки 1',\n            },\n            {\n                id: 2,\n                content: 'Содержимое заметки 2',\n            },\n            {\n                id: 3,\n                content: 'Содержимое заметки 3',\n            },\n        ]\n    },\n    {\n        id: 2,\n        title: 'Название колонки 2',\n        cards: [\n            {\n                id: 4,\n                content: 'Содержимое заметки 1',\n            },\n            {\n                id: 5,\n                content: 'Содержимое заметки 2',\n            },\n            {\n                id: 6,\n                content: 'Содержимое заметки 3',\n            },\n        ]\n    },\n    {\n        id: 3,\n        title: 'Название колонки 3',\n        cards: [\n            {\n                id: 7,\n                content: 'Содержимое заметки 1',\n            },\n            {\n                id: 8,\n                content: 'Содержимое заметки 2',\n            },\n            {\n                id: 9,\n                content: 'Содержимое заметки 3',\n            },\n        ]\n    },\n];\n\nexport const saveBoard = (data) => {\n    localStorage.setItem('data:board', JSON.stringify(data));\n};\n\nexport const getBoard = () => {\n    return localStorage.getItem('data:board') ? JSON.parse(localStorage.getItem('data:board')) : initialData;\n};\n\nexport const saveMeta = (data) => {\n    localStorage.setItem('data:meta', JSON.stringify(data));\n};\n\nexport const getMeta = () => {\n    return localStorage.getItem('data:meta') ? JSON.parse(localStorage.getItem('data:meta')) : { title: 'Курс React - разработка Trello' };\n};\n","import {useEffect, useRef} from \"react\";\n\nconst useAutoFocus = ({ isRedact }) => {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        if (isRedact) ref.current.focus();\n    }, [isRedact]);\n\n    return ref;\n};\n\nexport default useAutoFocus;\n","const BaseTextToggle = ({ isRedact, content, inputRef, onChange, onRedactToggle, inputClassName, textClassName }) => {\n    return isRedact\n        ? (\n            <input value={content} ref={inputRef} onChange={onChange} onBlur={onRedactToggle} className={inputClassName} />\n        )\n        : <p className={textClassName} onClick={onRedactToggle}>{content}</p>\n};\n\nexport default BaseTextToggle;\n","import BaseTextToggle from \"../common/BaseTextToggle\";\nimport style from './Header.module.css';\n\nconst BaseToggle = (props) => {\n    return <BaseTextToggle inputClassName={style.header__redactTitle} textClassName={style.header__title} {...props} />\n};\n\nexport default BaseToggle;\n","import style from './Header.module.css';\nimport {useEffect, useState} from \"react\";\nimport {getMeta, saveMeta} from \"../../api/board\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport useAutoFocus from \"../../hooks/useAutoFocus\";\nimport BaseToggle from \"./TextToggle\";\n\nconst Header = () => {\n    const [isRedact, setIsRedact] = useState(false);\n    const [title, setTitle] = useState('');\n    const location = useLocation();\n    const ref = useAutoFocus({ isRedact });\n\n    useEffect(() => {\n        setTitle(getMeta().title);\n    }, []);\n\n    useEffect(() => {\n        saveMeta({ title });\n    }, [title]);\n\n    return (\n        <header className={style.header}>\n            <BaseToggle isRedact={isRedact} content={title} onChange={(v) => setTitle(v.target.value)} inputRef={ref} onRedactToggle={() => setIsRedact(!isRedact)} />\n            {\n                location.pathname === '/settings'\n                    ? <Link to=\"/\" className={style.header__link}>Назад</Link>\n                    : <Link to=\"/settings\" className={style.header__link}>Настройки</Link>\n            }\n        </header>\n    );\n};\n\nexport default Header;\n","import {CSSTransition} from \"react-transition-group\";\nimport React, {useMemo, Suspense, lazy} from \"react\";\nimport {createPortal} from \"react-dom\";\nimport './ModalTransition.css';\nimport {RedactCardProps} from \"../RedactCard\";\nimport styled from 'styled-components';\n\nconst RedactCard = lazy(() => import(\"../RedactCard\"));\n\nconst ModalOverlay = styled.div`\n    background-color: rgba(0,0,0,.64);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nconst ModalCard = styled.div`\n    background-color: #f4f5f7;\n    border-radius: 2px;\n    overflow: hidden;\n    width: 768px;\n    z-index: 25;\n    height: 400px;\n    position: fixed;\n    left: 50%;\n    transform: translateX(-50%);\n    top: 48px;\n`;\n\ntype ModalProps = {\n    isOpen: boolean;\n    onClose: () => void;\n} & RedactCardProps;\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, ...props }) => {\n    const modals = useMemo(() => {\n        return document.getElementById('modals')!;\n    }, []);\n\n    return createPortal(\n        <CSSTransition in={isOpen} timeout={300} classNames=\"modalTransition\" unmountOnExit>\n            <div>\n                <ModalOverlay onClick={onClose} />\n                <ModalCard>\n                    <Suspense fallback=\"Загрузка...\">\n                        <RedactCard {...props} />\n                    </Suspense>\n                </ModalCard>\n            </div>\n        </CSSTransition>,\n        modals,\n    );\n};\n\nexport default Modal;\n","import style from './Card.module.scss';\nimport {memo, useState} from \"react\";\nimport {Draggable} from \"react-beautiful-dnd\";\nimport Modal from \"../Modal\";\nimport PropTypes from 'prop-types';\nimport useAutoFocus from \"../../hooks/useAutoFocus\";\n\nconst Card = ({ content, onUpdate, columnId, cardId, index, description }) => {\n    const [isRedact, setIsRedact] = useState(!content);\n    const [isOpen, setIsOpen] = useState(false);\n    const ref = useAutoFocus({ isRedact });\n\n    const deleteCard = () => {\n        onUpdate({\n            type: 'delete_card',\n            payload: {\n                column_id: columnId,\n                card_id: cardId,\n            },\n        });\n    };\n\n    return (\n        <>\n            <Draggable draggableId={`card_${cardId}`} index={index}>\n                {provided => (\n                    <div\n                        className={style.card}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                    >\n                        {\n                            isRedact\n                                ? <textarea className={style.card__content} value={content} onBlur={() => setIsRedact(false)} ref={ref} onChange={(v) => onUpdate({\n                                    type: 'update_card',\n                                    payload: {\n                                        content: v.target.value,\n                                        column_id: columnId,\n                                        card_id: cardId,\n                                    }\n                                })} />\n                                : <div className={style.card__content} onClick={() => setIsOpen(true)}>{content}</div>\n                        }\n                        <button className={style.card__deleteButton} onClick={deleteCard}><span>+</span></button>\n                    </div>\n                )}\n            </Draggable>\n\n            <Modal isOpen={isOpen} onClose={() => setIsOpen(false)} content={content} columnId={columnId} cardId={cardId} description={description} />\n        </>\n    );\n};\n\nCard.propTypes = {\n    content: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    onUpdate: PropTypes.func.isRequired,\n    columnId: PropTypes.number.isRequired,\n    cardId: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default memo(Card);\n","import BaseTextToggle from \"../common/BaseTextToggle\";\nimport style from './Column.module.css';\n\nconst BaseToggle = (props) => {\n    return <BaseTextToggle inputClassName={style.column__redactTitle} textClassName={style.column__cardTitle} {...props} />\n};\n\nexport default BaseToggle;\n","import style from './Column.module.css';\nimport Card from \"../Card\";\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport useAutoFocus from \"../../hooks/useAutoFocus\";\nimport BaseToggle from \"./TextToggle\";\n\nconst Column = ({ title, cards, columnId, index }) => {\n    const [isRedact, setIsRedact] = useState(!title);\n    const ref = useAutoFocus({ isRedact });\n    const dispatch = useDispatch();\n\n    const addCard = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'add_card',\n            payload: {\n                column_id: columnId,\n                content: '',\n            },\n        });\n    };\n\n    return (\n        <Draggable draggableId={`column_${columnId}`} index={index}>\n            {(provided) => (\n                <div\n                    className={style.column}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                >\n                    <div className={style.column__card}>\n                        <div className={style.column__cardHeader} {...provided.dragHandleProps}>\n                            <BaseToggle isRedact={isRedact} content={title} onChange={(v) => dispatch({\n                                type: 'update_column_title',\n                                payload: {\n                                    column_id: columnId,\n                                    title: v.target.value,\n                                },\n                            })} inputRef={ref} onRedactToggle={() => setIsRedact(!isRedact)} />\n                        </div>\n                        <Droppable\n                            droppableId={`column_${columnId}`}\n                            type=\"COLUMN\"\n                        >\n                            {innerProvided => (\n                                <div className={style.column__cardBody} ref={innerProvided.innerRef} {...innerProvided.droppableProps}>\n                                    {cards.map((el, index) => <Card key={el.id} content={el.content} onUpdate={dispatch} columnId={columnId} cardId={el.id} index={index} description={el.description} />)}\n                                    {innerProvided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                        <button className={style.column__addButton} onClick={addCard}>+ Добавить еще одну карточку</button>\n                        <button className={style.column__deleteButton} onClick={() => dispatch({\n                            type: 'delete_column',\n                            payload: {\n                                delete_column_id: columnId,\n                            },\n                        })}><span>+</span></button>\n                    </div>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport default Column;\n","import style from './Body.module.css';\nimport Column from \"../Column\";\nimport {useCallback} from \"react\";\nimport {Droppable, DragDropContext} from \"react-beautiful-dnd\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Body = () => {\n    const data = useSelector((store) => store.board);\n    const dispatch = useDispatch();\n\n    const onDragEnd = useCallback(({ source, destination }) => {\n        if (!destination) return;\n\n        if (source.droppableId === 'board') {\n            dispatch({\n                type: 'reorder_columns',\n                payload: {\n                    source_index: source.index,\n                    destination_index: destination.index\n                },\n            })\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            if (destination.index === source.index) {\n                return;\n            }\n\n            dispatch({\n                type: 'reorder_cards',\n                payload: {\n                    column_id: +source.droppableId.replace('column_', ''),\n                    source_index: source.index,\n                    destination_index: destination.index\n                },\n            })\n        } else {\n            dispatch({\n                type: 'reorder_cards_between_columns',\n                payload: {\n                    source_column_id: +source.droppableId.replace('column_', ''),\n                    destination_column_id: +destination.droppableId.replace('column_', ''),\n                    source_index: source.index,\n                    destination_index: destination.index\n                },\n            })\n        }\n    }, [dispatch]);\n\n    return (\n        <ScrollContainer ignoreElements={`.${style.body__content} > *`} className={style.body}>\n            <DragDropContext\n                onDragEnd={onDragEnd}\n            >\n                <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"BOARD\">\n                    {(provided) => (\n                        <div\n                            className={style.body__content}\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                        >\n                            {data.map((el, index) => <Column key={el.id} title={el.title} cards={el.cards} columnId={el.id} index={index} />)}\n                            {provided.placeholder}\n                            <button className={style.body__addColumn} onClick={() => dispatch({\n                                type: 'add_column',\n                            })}>+ Добавить {data.length ? 'еще одну ' : ''}колонку</button>\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </ScrollContainer>\n    );\n};\n\nexport default Body;\n","import {getBoard, saveBoard} from \"../api/board\";\n\nconst initialState = getBoard();\n\nconst board = (prev = initialState, { type, payload = {} }) => {\n    let newData = [...prev];\n    const columnIndex = newData.findIndex((c) => c.id === payload.column_id);\n    const column = columnIndex > -1 ? { ...newData[columnIndex] } : null;\n    switch (type) {\n        case 'update_card':\n            column.cards.find((c) => c.id === payload.card_id).content = payload.content;\n            break;\n        case 'update_card_description':\n            column.cards.find((c) => c.id === payload.card_id).description = payload.description;\n            break;\n        case 'update_column_title':\n            column.title = payload.title;\n            break;\n        case 'add_card':\n            column.cards = [...column.cards, {\n                id: new Date().getTime(),\n                content: payload.content,\n            }];\n            break;\n        case 'add_column':\n            newData = [...newData, {\n                id: new Date().getTime(),\n                title: '',\n                cards: [],\n            }];\n            break;\n        case 'delete_card':\n            column.cards = column.cards.filter((f) => f.id !== payload.card_id);\n            break;\n        case 'delete_column':\n            newData = newData.filter((f) => f.id !== payload.delete_column_id);\n            break;\n        case 'reorder_columns':\n            const [removedColumn] = newData.splice(payload.source_index, 1);\n            newData.splice(payload.destination_index, 0, removedColumn);\n            break;\n        case 'reorder_cards':\n            const result = [...column.cards];\n            const [removed] = result.splice(payload.source_index, 1);\n            result.splice(payload.destination_index, 0, removed);\n            column.cards = result;\n            break;\n        case 'reorder_cards_between_columns':\n            const sourceCloneIndex = newData.findIndex((c) => c.id === payload.source_column_id);\n            const destinationCloneIndex = newData.findIndex((c) => c.id === payload.destination_column_id);\n            const sourceClone = newData[sourceCloneIndex];\n            const destinationClone = newData[destinationCloneIndex];\n            const [sourceRemoved] = sourceClone.cards.splice(payload.source_index, 1);\n\n            destinationClone.cards.splice(payload.destination_index, 0, sourceRemoved);\n\n            newData[sourceCloneIndex] = sourceClone;\n            newData[destinationCloneIndex] = destinationClone;\n            break;\n        default:\n            break;\n    }\n    if (column) newData[columnIndex] = column;\n    saveBoard(newData);\n    return newData;\n};\n\nexport default board;\n","import {combineReducers, createStore} from \"redux\";\n\nimport board from './board';\n\nconst store = combineReducers({\n    board,\n});\n\nexport default createStore(store);\n","const Settings = () => {\n    return (\n        <button onClick={() => localStorage.clear()}>Сбросить все данные</button>\n    );\n};\n\nexport default Settings;\n","import './App.css';\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport {Provider} from \"react-redux\";\n\nimport store from './store';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Settings from \"./components/Settings\";\n\nfunction App() {\n  return (\n      <Provider store={store}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className=\"App\">\n                  <Header />\n                  <Switch>\n                      <Route path=\"/settings\">\n                          <Settings />\n                      </Route>\n                      <Route path=\"/\">\n                          <Body />\n                      </Route>\n                  </Switch>\n              </div>\n          </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n    );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}